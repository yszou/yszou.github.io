Groovy 学习笔记
邹业盛
%%mtime(%Y-%m-%d %H:%M)
%!encoding: utf-8
%!options(xhtml): --google-analytics --disqus
%!qr: http://www.zouyesheng.com/groovy.html
%!format: !email
%%toc


# 安装 #

``groovy`` 是一个基于 JVM 的语言，可以解释执行，也可以编译。

它的安装和普通的编程语言一样，下载一个目录包，使用里面 ``bin`` 目录中的可执行程序就可以执行，但是 ``groovy`` 依赖 JDK ，需要 ``java`` 这个可执行程序。

下载页面在：https://groovy.apache.org/download.html


# 语法 #

``groovy`` 本身兼容 java 的语法（静态语言语法）。同时，它又有自己独立的另外一套语法（动态语言语法）。 ``groovy`` 语法受 Python 和 Ruby 影响，所以一些细节是比较友好的。当然，从另一方面来说，细节就相对多了不少。

## 定义和赋值 ##

一方面，总是可以使用 ``def`` 来定义变量，函数。另一方面，可以像 java 一样，以类型开头：

```groovy
def a = 1
int b = 1
def c = [a, b]
// println [a, b]
println c
```

上面代码中上，直接写注释的那一行是不行的。可以写成 ``println([a, b])`` ，这里的括号不能省。嗯， Ruby 的那套吧。


## 关键词 ##

``groovy`` 有一些关键词，比如 ``def`` 。但是，我们可以用关键词作为函数名， *map* 的 *key*，加上双引号就行：

```groovy
def 'def' () {
    def m = ['def': 12345]
    println m.'def'
}

"def"()
```

这个有点意思啊。既然关键词可以，那带空格或者特殊符号的句子也可以：

```groovy
def 'let me try space here' () {
    def m = ['def': 12345]
    println m.'def'
}

"let me try space here"()
```



